/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 GU22HOODIEWR_man_cord01_color_cru_end_silicone.gltf --transform --types
Files: GU22HOODIEWR_man_cord01_color_cru_end_silicone.gltf [214.63KB] > GU22HOODIEWR_man_cord01_color_cru_end_silicone-transformed.glb [10.18MB] (-4643%)
*/

import * as THREE from "three";
import React, { useCallback, useEffect, useState, useRef } from "react";
import {
  Decal,
  useGLTF,
} from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useCustomizeContext } from "@/components/customize/context";
import { useThree } from "@react-three/fiber";
import { isEmpty } from "@/helpers/common";
import FabricEditableTexture from "./fabric-texture";
import { useRaycast } from "@/hooks/use-custom-raycast";
import useCustomTextures from "@/hooks/use-custom-texture";

type GLTFResult = GLTF & {
  nodes: {
    StitchMatShape_18533_Node001: THREE.Mesh;
    StitchMatShape_18643_Node001: THREE.Mesh;
    StitchMatShape_18792_Node001: THREE.Mesh;
    StitchMatShape_18904_Node001: THREE.Mesh;
    StitchMatShape_19011_Node001: THREE.Mesh;
    StitchMatShape_19136_Node001: THREE.Mesh;
    StitchMatShape_19297_Node001: THREE.Mesh;
    StitchMatShape_19398_Node001: THREE.Mesh;
    StitchMatShape_19431_Node001: THREE.Mesh;
    StitchMatShape_19464_Node001: THREE.Mesh;
    StitchMatShape_19555_Node001: THREE.Mesh;
    StitchMatShape_19646_Node001: THREE.Mesh;
    StitchMatShape_19732_Node001: THREE.Mesh;
    StitchMatShape_19818_Node001: THREE.Mesh;
    StitchMatShape_19978_Node001: THREE.Mesh;
    StitchMatShape_20397_Node001: THREE.Mesh;
    StitchMatShape_20474_Node001: THREE.Mesh;
    StitchMatShape_20546_Node001: THREE.Mesh;
    StitchMatShape_20635_Node001: THREE.Mesh;
    StitchMatShape_20724_Node001: THREE.Mesh;
    ["HOODIE-BOLSO001001"]: THREE.Mesh;
    ["HOODIE-BOLSO001_1001"]: THREE.Mesh;
    ["HOODIE-BOLSO001_2001"]: THREE.Mesh;
    ["HOODIE-CA_1001001"]: THREE.Mesh;
    ["HOODIE-CA_1001_1001"]: THREE.Mesh;
    ["HOODIE-CA_1001_2001"]: THREE.Mesh;
    ["HOODIE-CINTO001001"]: THREE.Mesh;
    ["HOODIE-CINTO001_1001"]: THREE.Mesh;
    ["HOODIE-CINTO001_2001"]: THREE.Mesh;
    ["HOODIE-COSTA001001"]: THREE.Mesh;
    ["HOODIE-COSTA001_1001"]: THREE.Mesh;
    ["HOODIE-COSTA001_2001"]: THREE.Mesh;
    ["HOODIE-FRENTE001001"]: THREE.Mesh;
    ["HOODIE-FRENTE001_1001"]: THREE.Mesh;
    ["HOODIE-FRENTE001_2001"]: THREE.Mesh;
    ["HOODIE-MANGA_4001001"]: THREE.Mesh;
    ["HOODIE-MANGA_4001_1001"]: THREE.Mesh;
    ["HOODIE-MANGA_4001_2001"]: THREE.Mesh;
    ["HOODIE-MANGA_5001001"]: THREE.Mesh;
    ["HOODIE-MANGA_5001_1001"]: THREE.Mesh;
    ["HOODIE-MANGA_5001_2001"]: THREE.Mesh;
    ["HOODIE-MEIALUA001001"]: THREE.Mesh;
    ["HOODIE-MEIALUA001_1001"]: THREE.Mesh;
    ["HOODIE-MEIALUA001_2001"]: THREE.Mesh;
    ["HOODIE-PUNHO_1001001"]: THREE.Mesh;
    ["HOODIE-PUNHO_1001_1001"]: THREE.Mesh;
    ["HOODIE-PUNHO_1001_2001"]: THREE.Mesh;
    ["HOODIE-PUNHO_2001001"]: THREE.Mesh;
    ["HOODIE-PUNHO_2001_1001"]: THREE.Mesh;
    ["HOODIE-PUNHO_2001_2001"]: THREE.Mesh;
    Pattern_51588001001: THREE.Mesh;
    Pattern_51588001_1001: THREE.Mesh;
    Pattern_51588001_2001: THREE.Mesh;
  };
  materials: {
    ["Material3319.003"]: THREE.MeshStandardMaterial;
    ["Material3555.003"]: THREE.MeshStandardMaterial;
    ["Material3791.003"]: THREE.MeshStandardMaterial;
    ["Material3083.003"]: THREE.MeshStandardMaterial;
    ["Material4029.001"]: THREE.MeshStandardMaterial;
    ["Material4263.001"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_FRONT_2603.027"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_BACK_2603.033"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry hood_FRONT_2709.003"]: THREE.MeshStandardMaterial;
    ["Rib_1X1_486gsm_FRONT_2635.007"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_FRONT_2603.026"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_BACK_2603.030"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_FRONT_2603.025"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_BACK_2603.027"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_FRONT_2603.029"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_BACK_2603.039"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_FRONT_2603.030"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_BACK_2603.042"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_FRONT_2603.028"]: THREE.MeshStandardMaterial;
    ["Knit_Fleece_Terry_BACK_2603.036"]: THREE.MeshStandardMaterial;
    ["Rib_1X1_486gsm_FRONT_2635.010"]: THREE.MeshStandardMaterial;
    ["Rib_1X1_486gsm_FRONT_2635.013"]: THREE.MeshStandardMaterial;
    ["seam cover_FRONT_2731.002"]: THREE.MeshStandardMaterial;
    ["seam cover_BACK_2731.002"]: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: any) {
  const customize = useCustomizeContext();
  const { embelIndex, canvasRef, textureRef, canvasRenderedRef, controlsRef } = props;
  const modelRef = useRef<any>();

  let loader = new THREE.TextureLoader();
  loader.setCrossOrigin("");

  const [tagName, setTagName] = useState("");
  const [tagTexture, setTagTexture] = useState(new THREE.Texture()) as any;

  const { nodes, materials } = useGLTF(
    "/models/Hoody/HOODIE_MAN2.glb"
  ) as GLTFResult;

  const tag = useCallback(() => {
    try {
      if (!!tagName) {
        const { nodes, materials } = useGLTF(
          `/models/Hoody/tags/Man/${tagName}/${tagName}.glb`
        ) as any;

        const material: any = materials[Object.keys(materials)[0]];
        let keys: string[] = Object.keys(nodes);
        keys = keys.filter((key) => nodes[key].isMesh);
        const positionY = customize.tag.size.startsWith("45x45")
          ? 1.595
          : customize.tag.size.startsWith("55")
            ? 1.603
            : 1.615;
        const scaleYZ = customize.tag.size.startsWith("45x45")
          ? 0.02
          : customize.tag.size.startsWith("55")
            ? 0.016
            : 0.025;
        const scaleX = !tagTexture.source.data
          ? 0
          : (scaleYZ * tagTexture.source.data.naturalWidth) /
          tagTexture.source.data.naturalHeight;

        return (
          <group dispose={null}>
            {keys.map((key: string, idx: number) =>
              idx === 0 ? (
                <mesh
                  name={`pattern_tag_${idx}`}
                  geometry={nodes[key].geometry}
                  material={material}
                  key={key}
                >
                  <Decal
                    position={[-0.002, positionY, -0.09]}
                    rotation={[0, 0, 0]}
                    scale={[scaleX, scaleYZ, scaleYZ]}
                    map={tagTexture}
                    // debug={true}
                    depthTest={true}
                  />
                </mesh>
              ) : (
                <mesh
                  name={`pattern_tag_${idx}`}
                  geometry={nodes[key].geometry}
                  material={material}
                  key={key}
                />
              )
            )}
          </group>
        );
      } else {
        return "";
      }
    } catch (err) {
      console.log(err);
    }
  }, [tagName, tagTexture]);

  const cord = useCallback(() => {
    try {
      if (!!customize.cord) {
        const { nodes, materials } = useGLTF(
          `/models/Hoody/cords/Man/${customize.cord}/${customize.cord}.gltf`
        ) as any;
        if (customize.cord === "Cord1") {
          return (
            <group>
              <mesh
                geometry={nodes.Pattern2D_244420.geometry}
                material={materials.Polyester_Taffeta_FRONT_2663}
              />
              <mesh
                geometry={nodes.Pattern2D_244420_1.geometry}
                material={materials.Polyester_Taffeta_FRONT_2663}
              />
              <mesh
                geometry={nodes.Pattern2D_244420_2.geometry}
                material={materials.Polyester_Taffeta_FRONT_2663}
              />
              <mesh
                geometry={nodes.Pattern2D_244422.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.002"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244422_1.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.002"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244422_2.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.002"]}
              />
            </group>
          );
        } else if (customize.cord === "Cord2") {
          return (
            <group>
              <mesh
                geometry={nodes.Pattern2D_244420_Node.geometry}
                material={materials.Polyester_Taffeta_FRONT_2480}
              />
              <mesh
                geometry={nodes.Pattern2D_244422_Node.geometry}
                material={materials["Polyester_Taffeta_FRONT_2480.001"]}
              />
            </group>
          );
        } else if (customize.cord === "Cord3") {
          return (
            <group>
              <mesh
                geometry={nodes.Pattern2D_244424_Node.geometry}
                material={materials["Polyester_Taffeta_FRONT_2487.004"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244422_Node.geometry}
                material={materials["Polyester_Taffeta_FRONT_2487.005"]}
              />
            </group>
          );
        } else if (customize.cord === "Cord4") {
          return (
            <group>
              <mesh
                geometry={nodes.Pattern2D_244420009.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.020"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244420009_1.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.020"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244420009_2.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.020"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244422012.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.022"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244422012_1.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.022"]}
              />
              <mesh
                geometry={nodes.Pattern2D_244422012_2.geometry}
                material={materials["Polyester_Taffeta_FRONT_2663.022"]}
              />
            </group>
          );
        }
      }
    } catch (err) { }
    return null;
  }, [customize.cord]);

  const cordTipItem = useCallback(() => {
    try {
      if (!!customize.cord && !!customize.cordTip) {
        const { nodes, materials } = useGLTF(
          `/models/Hoody/cords/Man/${customize.cord}/${customize.cordTip}/${customize.cordTip}.glb`
        ) as any;
        if (customize.cord === "Cord1") {
          if (customize.cordTip === "mental_end") {
            return (
              <group>
                <mesh
                  geometry={nodes.MatShape_49527_Node.geometry}
                  material={materials.Material4631}
                  position={[-0.1488, 0.171, 0.55]}
                  rotation={[2.946, 0.879, -3.115]}
                  scale={[1.294, 0.941, 1.294]}
                />
                <mesh
                  geometry={nodes.MatShape_101039_Node.geometry}
                  material={materials.Material4631}
                  position={[-0.09, 0.171, 0.5665]}
                  rotation={[2.98, 0.51, -3.134]}
                  scale={[1.294, 0.941, 1.294]}
                />
              </group>
            );
          } else if (customize.cordTip === "plastic_end") {
            return (
              <group {...props} dispose={null}>
                <group
                  {...props}
                  dispose={null}
                  position={[0.001, -0.002, 0.001]}
                >
                  <mesh
                    geometry={nodes.Pattern2D_244421.geometry}
                    material={materials["Polyester_Taffeta Copy 1_FRONT_2687"]}
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244421_1.geometry}
                    material={materials["Polyester_Taffeta Copy 1_FRONT_2687"]}
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244421_2.geometry}
                    material={materials["Polyester_Taffeta Copy 1_FRONT_2687"]}
                  />
                </group>
                <group
                  {...props}
                  dispose={null}
                  position={[-0.004, -0.002, 0.0015]}
                >
                  <mesh
                    geometry={nodes.Pattern2D_244423.geometry}
                    material={
                      materials["Polyester_Taffeta Copy 1_FRONT_2687.002"]
                    }
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244423_1.geometry}
                    material={
                      materials["Polyester_Taffeta Copy 1_FRONT_2687.002"]
                    }
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244423_2.geometry}
                    material={
                      materials["Polyester_Taffeta Copy 1_FRONT_2687.002"]
                    }
                  />
                </group>
              </group>
            );
          } else if (customize.cordTip === "silicone_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.Pattern_55162001.geometry}
                  material={materials["silicone_FRONT_2710.003"]}
                />
                <mesh
                  geometry={nodes.Pattern_55162001_1.geometry}
                  material={materials["silicone_FRONT_2710.003"]}
                />
                <mesh
                  geometry={nodes.Pattern_55162001_2.geometry}
                  material={materials["silicone_FRONT_2710.003"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163001.geometry}
                  material={materials["silicone_FRONT_2710.005"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163001_1.geometry}
                  material={materials["silicone_FRONT_2710.005"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163001_2.geometry}
                  material={materials["silicone_FRONT_2710.005"]}
                />
              </group>
            );
          }
        } else if (customize.cord === "Cord2") {
          if (customize.cordTip === "mental_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.MatShape_54439_Node.geometry}
                  material={materials["Material4631.002"]}
                  position={[-0.0145, 0.09, 0.103]}
                  rotation={[-0.156, -0.165, -0.007]}
                  scale={[0.975, 0.94, 0.975]}
                />
                <mesh
                  geometry={nodes.MatShape_83371_Node.geometry}
                  material={materials["Material4631.002"]}
                  position={[-0.1695, 0.102, 0.174]}
                  rotation={[-0.173, 0.362, -0.017]}
                  scale={[0.975, 0.94, 0.975]}
                />
              </group>
            );
          } else if (customize.cordTip === "plastic_end") {
            return (
              <group>
                <mesh
                  geometry={nodes.Pattern2D_244421_Node.geometry}
                  material={materials["Polyester_Taffeta Copy 1_FRONT_2497"]}
                  position={[0.001, 0, 0]}
                />
                <mesh
                  geometry={nodes.Pattern2D_244423_Node.geometry}
                  material={
                    materials["Polyester_Taffeta Copy 1_FRONT_2497.001"]
                  }
                  position={[-0.0015, 0, 0]}
                />
              </group>
            );
          } else if (customize.cordTip === "silicone_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.Pattern_55162_Node.geometry}
                  material={materials["silicone_FRONT_2499.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163_Node.geometry}
                  material={materials["silicone_FRONT_2499.003"]}
                />
              </group>
            );
          }
        } else if (customize.cord === "Cord3") {
          if (customize.cordTip === "mental_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.MatShape_69312_Node.geometry}
                  material={materials["Material4631.003"]}
                  position={[0.224, 0.062, 0.045]}
                  rotation={[-0.138, -0.949, 0.01]}
                  scale={[1.529, 0.958, 1.529]}
                />
                <mesh
                  geometry={nodes.MatShape_103875_Node.geometry}
                  material={materials["Material4631.003"]}
                  position={[0.068, 0.056, 0.023]}
                  rotation={[-0.163, -0.5, 0.021]}
                  scale={[1.529, 0.958, 1.529]}
                />
              </group>
            );
          } else if (customize.cordTip === "plastic_end") {
            return (
              <group {...props} dispose={null}>
                <group {...props} dispose={null} position={[0, 0.001, 0]}>
                  <mesh
                    geometry={nodes.Pattern2D_244421002.geometry}
                    material={materials["Polyester_Taffeta Copy 1_FRONT_2688"]}
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244421002_1.geometry}
                    material={materials["Polyester_Taffeta Copy 1_FRONT_2688"]}
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244421002_2.geometry}
                    material={materials["Polyester_Taffeta Copy 1_FRONT_2688"]}
                  />
                </group>
                <group {...props} dispose={null} position={[-0.007, 0.001, 0]}>
                  <mesh
                    geometry={nodes.Pattern2D_244423002.geometry}
                    material={
                      materials["Polyester_Taffeta Copy 1_FRONT_2688.002"]
                    }
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244423002_1.geometry}
                    material={
                      materials["Polyester_Taffeta Copy 1_FRONT_2688.002"]
                    }
                  />
                  <mesh
                    geometry={nodes.Pattern2D_244423002_2.geometry}
                    material={
                      materials["Polyester_Taffeta Copy 1_FRONT_2688.002"]
                    }
                  />
                </group>
              </group>
            );
          } else if (customize.cordTip === "silicone_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.Pattern_55162_Node.geometry}
                  material={materials["silicone_FRONT_2506.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163_Node.geometry}
                  material={materials["silicone_FRONT_2506.003"]}
                />
              </group>
            );
          }
        } else if (customize.cord === "Cord4") {
          if (customize.cordTip === "mental_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.MatShape_69312_Node.geometry}
                  material={materials["Material4631.004"]}
                  position={[0.2303, 0.056, 0.048]}
                  rotation={[-0.138, -0.948, 0.01]}
                  scale={[1.529, 0.958, 1.529]}
                />
                <mesh
                  geometry={nodes.MatShape_103875_Node.geometry}
                  material={materials["Material4631.004"]}
                  position={[0.07, 0.05, 0.025]}
                  rotation={[-0.163, -0.509, 0.02]}
                  scale={[1.529, 0.958, 1.529]}
                />
              </group>
            );
          } else if (customize.cordTip === "plastic_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.Pattern2D_244421003.geometry}
                  material={materials["Polyester_Taffeta_FRONT_2685.002"]}
                />
                <mesh
                  geometry={nodes.Pattern2D_244421003_1.geometry}
                  material={materials["Polyester_Taffeta_FRONT_2685.002"]}
                />
                <mesh
                  geometry={nodes.Pattern2D_244421003_2.geometry}
                  material={materials["Polyester_Taffeta_FRONT_2685.002"]}
                />
                <mesh
                  geometry={nodes.Pattern2D_244423003.geometry}
                  material={materials["Polyester_Taffeta_FRONT_2685.005"]}
                />
                <mesh
                  geometry={nodes.Pattern2D_244423003_1.geometry}
                  material={materials["Polyester_Taffeta_FRONT_2685.005"]}
                />
                <mesh
                  geometry={nodes.Pattern2D_244423003_2.geometry}
                  material={materials["Polyester_Taffeta_FRONT_2685.005"]}
                />
              </group>
            );
          } else if (customize.cordTip === "silicone_end") {
            return (
              <group {...props} dispose={null}>
                <mesh
                  geometry={nodes.Pattern_55162007.geometry}
                  material={materials["silicone_FRONT_2711.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55162007_1.geometry}
                  material={materials["silicone_FRONT_2711.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55162007_2.geometry}
                  material={materials["silicone_FRONT_2711.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163007.geometry}
                  material={materials["silicone_FRONT_2711.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163007_1.geometry}
                  material={materials["silicone_FRONT_2711.002"]}
                />
                <mesh
                  geometry={nodes.Pattern_55163007_2.geometry}
                  material={materials["silicone_FRONT_2711.002"]}
                />
              </group>
            );
          }
        }
      }
    } catch (err) { }
    return null;
  }, [customize.cordTip, customize.cord]);

  useEffect(() => {
    if (!isEmpty(customize.tag.file)) {
      loader
        .loadAsync(
          typeof customize.tag.file === "string"
            ? customize.tag.file
            : URL.createObjectURL(customize.tag.file)
        )
        .then((result) => {
          setTagTexture(result);
        });
    }
  }, [customize.tag.file]);

  useEffect(() => {
    if (customize.tag.neck)
      setTagName(
        `label-${customize.tag.size}_${customize.tag.color ? "black" : "white"}`
      );
    else setTagName(`print-label_${customize.tag.color ? "black" : "white"}`);
  }, [customize.tag]);

  useEffect(() => {
    props.setLoading(false)
  }, [])

  if (customize.color.length > 0) {
    const color = customize.color;
    for (let key in materials) {
      delete materials[key]["_listeners"];
      materials[key] = new THREE.MeshStandardMaterial({
        ...materials[key],
        color: color,
      });
    }
  }
  /*
    30 DECEMBER 2023
    NAO ADDING RAYCAST FEATURE
  */
  const { bumpOutMap, normalOutMap, bumpInMap, normalInMap } = useCustomTextures();
  const { camera, gl, raycaster, scene, mouse, pointer } = useThree();
  useRaycast(
    controlsRef,
    canvasRef,
    canvasRenderedRef,
    textureRef,
    "Hoodies",
    customize,
    embelIndex,
    camera,
    gl,
    raycaster,
    scene,
    mouse,
    pointer
  );
  // NAO

  return (
    <group position={[0, 0, 0]} {...props} dispose={null}>
      <mesh
        geometry={nodes.StitchMatShape_18533_Node001.geometry}
        material={materials["Material3319.003"]}
      >
        {customize.tag.edit ? tag() : ""}
      </mesh>
      <mesh
        geometry={nodes.StitchMatShape_18643_Node001.geometry}
        material={materials["Material3319.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_18792_Node001.geometry}
        material={materials["Material3319.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_18904_Node001.geometry}
        material={materials["Material3319.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19011_Node001.geometry}
        material={materials["Material3319.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19136_Node001.geometry}
        material={materials["Material3555.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19297_Node001.geometry}
        material={materials["Material3791.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19398_Node001.geometry}
        material={materials["Material3083.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19431_Node001.geometry}
        material={materials["Material3083.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19464_Node001.geometry}
        material={materials["Material3083.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19555_Node001.geometry}
        material={materials["Material3791.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19646_Node001.geometry}
        material={materials["Material3791.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19732_Node001.geometry}
        material={materials["Material3791.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19818_Node001.geometry}
        material={materials["Material3791.003"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_19978_Node001.geometry}
        material={materials["Material4029.001"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_20397_Node001.geometry}
        material={materials["Material4029.001"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_20474_Node001.geometry}
        material={materials["Material4263.001"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_20546_Node001.geometry}
        material={materials["Material4263.001"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_20635_Node001.geometry}
        material={materials["Material4029.001"]}
      />
      <mesh
        geometry={nodes.StitchMatShape_20724_Node001.geometry}
        material={materials["Material4029.001"]}
      />
      <mesh geometry={nodes["HOODIE-BOLSO001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-BOLSO001_1001"].geometry}
        material={materials["Knit_Fleece_Terry_BACK_2603.033"]}
      />
      <mesh
        geometry={nodes["HOODIE-BOLSO001_2001"].geometry}
        material={materials["Knit_Fleece_Terry_FRONT_2603.027"]}
      />
      <mesh geometry={nodes["HOODIE-CA_1001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalScale={0.001}
          color={customize.color}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
        {cord()}
        {cordTipItem()}
      </mesh>
      <mesh geometry={nodes["HOODIE-CA_1001_1001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalScale={0.001}
          color={customize.color}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-CA_1001_2001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalScale={0.001}
          color={customize.color}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-CINTO001001"].geometry}
        material={materials["Rib_1X1_486gsm_FRONT_2635.007"]}
      />
      <mesh geometry={nodes["HOODIE-CINTO001_1001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-CINTO001_2001"].geometry}
        material={materials["Rib_1X1_486gsm_FRONT_2635.007"]}
      />
      <mesh geometry={nodes["HOODIE-COSTA001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-COSTA001_1001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpInMap}
          normalScale={0}
          color={customize.color}
          bumpScale={2}
          normalMap={normalInMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-COSTA001_2001"].geometry}
        material={materials["Knit_Fleece_Terry_FRONT_2603.026"]}
      />
      <mesh geometry={nodes["HOODIE-FRENTE001001"].geometry} ref={modelRef}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-FRENTE001_1001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-FRENTE001_2001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MANGA_4001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MANGA_4001_1001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MANGA_4001_2001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MANGA_5001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MANGA_5001_1001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MANGA_5001_2001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh geometry={nodes["HOODIE-MEIALUA001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-MEIALUA001_1001"].geometry}
        material={materials["Knit_Fleece_Terry_BACK_2603.036"]}
      />
      <mesh
        geometry={nodes["HOODIE-MEIALUA001_2001"].geometry}
        material={materials["Knit_Fleece_Terry_FRONT_2603.028"]}
      />
      <mesh geometry={nodes["HOODIE-PUNHO_1001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-PUNHO_1001_1001"].geometry}
        material={materials["Rib_1X1_486gsm_FRONT_2635.010"]}
      />
      <mesh
        geometry={nodes["HOODIE-PUNHO_1001_2001"].geometry}
        material={materials["Rib_1X1_486gsm_FRONT_2635.010"]}
      />
      <mesh geometry={nodes["HOODIE-PUNHO_2001001"].geometry}>
        <FabricEditableTexture
          bumpMap={bumpOutMap}
          normalMap={normalOutMap}
          canvasRef={canvasRef}
          textureRef={textureRef}
        />
      </mesh>
      <mesh
        geometry={nodes["HOODIE-PUNHO_2001_1001"].geometry}
        material={materials["Rib_1X1_486gsm_FRONT_2635.013"]}
      />
      <mesh
        geometry={nodes["HOODIE-PUNHO_2001_2001"].geometry}
        material={materials["Rib_1X1_486gsm_FRONT_2635.013"]}
      />
      <mesh
        geometry={nodes.Pattern_51588001001.geometry}
        material={materials["seam cover_FRONT_2731.002"]}
      />
      <mesh
        geometry={nodes.Pattern_51588001_1001.geometry}
        material={materials["seam cover_BACK_2731.002"]}
      />
      <mesh
        geometry={nodes.Pattern_51588001_2001.geometry}
        material={materials["seam cover_FRONT_2731.002"]}
      />
    </group>
  );
}

useGLTF.preload("/models/Hoody/HOODIE_MAN.glb");

useGLTF.preload(
  "/models/Hoody/tags/Man/label-45x45_black/label-45x45_black.glb"
);
useGLTF.preload(
  "/models/Hoody/tags/Man/label-45x45_white/label-45x45_white.glb"
);
useGLTF.preload(
  "/models/Hoody/tags/Man/label-55x30_black/label-55x30_black.glb"
);
useGLTF.preload(
  "/models/Hoody/tags/Man/label-55x30_white/label-55x30_white.glb"
);
useGLTF.preload("/models/Hoody/cords/Man/Cord1/Cord1.gltf");
useGLTF.preload("/models/Hoody/cords/Man/Cord2/Cord2.gltf");
useGLTF.preload("/models/Hoody/cords/Man/Cord3/Cord3.gltf");
useGLTF.preload("/models/Hoody/cords/Man/Cord4/Cord4.gltf");

useGLTF.preload("/models/Hoody/cords/Man/Cord1/mental_end/mental_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord1/plastic_end/plastic_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord1/silicone_end/silicone_end.glb");

useGLTF.preload("/models/Hoody/cords/Man/Cord2/mental_end/mental_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord2/plastic_end/plastic_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord2/silicone_end/silicone_end.glb");

useGLTF.preload("/models/Hoody/cords/Man/Cord3/mental_end/mental_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord3/plastic_end/plastic_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord3/silicone_end/silicone_end.glb");

useGLTF.preload("/models/Hoody/cords/Man/Cord4/mental_end/mental_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord4/plastic_end/plastic_end.glb");
useGLTF.preload("/models/Hoody/cords/Man/Cord4/silicone_end/silicone_end.glb");
